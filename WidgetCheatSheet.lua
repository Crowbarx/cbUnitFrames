--[[
    WoW 1.12.1 Widget API Reference Cheat Sheet
    Purpose: To provide context to GitHub Copilot for accurate code generation for the WoW Widget API.
    This file details the methods available on UI Objects like Frames, Textures, Buttons, etc.
--]]

--[[ --- ==== Root Widgets ==== ---

-- Object (Abstract Base Type)
[cite_start]-- This is an abstract UI object type which cannot actually be created. [cite: 3]
[cite_start]-- Is base type for all types. [cite: 4]
-- GetParent() - Returns the object's parent.

-- UIObject (Abstract Base Type)
-- This is an abstract UI object type which cannot actually be created. [cite_start]Is base type for all widget types. [cite: 6]
[cite_start]-- GetAlpha() - Return this object's alpha (transparency) value. [cite: 7]
[cite_start]-- GetName() - Return the name of the object. [cite: 7]
[cite_start]-- GetObjectType() - Get the type of this object. [cite: 8]
[cite_start]-- IsForbidden() - Return bool indicating if it is a secure widget instance. [cite: 8]
[cite_start]-- IsObjectType("type") - Determine if this object is of the specified type, or a subclass of that type. [cite: 9]
[cite_start]-- SetAlpha(alpha) - Set the object's alpha (transparency) value. [cite: 10]
--]]

--[[ --- ==== UIObject Derivatives ==== ---

-- AnimationGroup
[cite_start]-- Manages playback, order, and looping of its child Animations. [cite: 10]
[cite_start]-- Play() - Start playing the animations in this group. [cite: 11]
[cite_start]-- Pause() - Pause the animations in this group. [cite: 11]
[cite_start]-- Stop() - Stop all animations in this group. [cite: 12]
[cite_start]-- Finish() - Notify this group to stop playing once the current loop cycle is done. [cite: 12]
[cite_start]-- GetProgress() - Returns the progress of this animation as a unit value [0,1]. [cite: 13]
[cite_start]-- IsDone() - Returns true if the group has finished playing. [cite: 14]
[cite_start]-- IsPlaying() - Returns true if the group is playing. [cite: 14]
[cite_start]-- IsPaused() - Returns true if the group is paused. [cite: 15]
[cite_start]-- GetDuration() - Gets the total duration for one loop cycle of all child Animations. [cite: 15]
[cite_start]-- SetLooping(loopType) - Sets the group loop type [NONE, REPEAT, BOUNCE]. [cite: 16]
[cite_start]-- GetLooping() - Gets the group loop type. [cite: 16]
[cite_start]-- GetLoopState() - Gets the current group loop state [NONE, FORWARD, REVERSE]. [cite: 17]
[cite_start]-- CreateAnimation("animationType"[, "name"[, "inheritsFrom"]]) - Create and return an Animation as a child of this group. [cite: 17]
[cite_start]-- HasScript("handler") - Handlers: OnLoad, OnPlay, OnPaused, OnStop, OnFinished, OnUpdate. [cite: 18]
[cite_start]-- GetScript("handler") - Handlers: OnLoad, OnPlay, OnPaused, OnStop, OnFinished, OnUpdate. [cite: 19]
[cite_start]-- SetScript("handler", function) - Handlers: OnLoad, OnPlay, OnPaused, OnStop, OnFinished, OnUpdate. [cite: 20]

-- Animation
[cite_start]-- Is the base animation type for animations in an AnimationGroup. [cite: 21]
[cite_start]-- Play() - Play the animation. [cite: 21]
[cite_start]-- Pause() - Pause the animation. [cite: 22]
[cite_start]-- Stop() - Stop the animation. [cite: 22]
[cite_start]-- IsDone() - Returns true if the animation has finished playing. [cite: 22]
[cite_start]-- IsPlaying() - Returns true if the animation is playing. [cite: 23]
[cite_start]-- IsPaused() - Returns true if the animation is paused. [cite: 23]
[cite_start]-- IsStopped() - Returns true if the animation is stopped. [cite: 24]
[cite_start]-- IsDelaying() - Returns true if the animation is in the middle of a start or end delay. [cite: 24]
[cite_start]-- GetElapsed() - Gets the amount of time in seconds that the animation has been playing for. [cite: 25]
[cite_start]-- SetStartDelay(delaySec) - Set the seconds that the animation delays before it starts. [cite: 26]
[cite_start]-- GetStartDelay() - Get the seconds that the animation delays before it starts. [cite: 27]
[cite_start]-- SetEndDelay(delaySec) - Set the number of seconds the animation delays after finishing. [cite: 28]
[cite_start]-- GetEndDelay() - Get the number of seconds the animation delays after finishing. [cite: 29]
[cite_start]-- SetDuration(durationSec) - Set the seconds it takes for the animation to progress from start to finish. [cite: 30]
[cite_start]-- GetDuration() - Get the seconds it takes for the animation to progress from start to finish. [cite: 31]
-- GetProgress() - Returns the progress of the animation as a unit value [0,1]. [cite_start]Ignores start and end delay. [cite: 32]
-- SetOrder(order) - Sets the order that the animation plays within its parent group. [cite_start]Range is [1,100]. [cite: 37]
[cite_start]-- GetOrder() - Gets the order of the animation within its parent group. [cite: 38]
[cite_start]-- SetSmoothing(smoothType) - Sets the smoothing type for the animation [IN, OUT, IN_OUT, OUT_IN]. [cite: 39]
[cite_start]-- GetSmoothing() - Gets the smoothing type for the animation. [cite: 39]
[cite_start]-- SetParent(animGroup or "animGroupName") - Sets the parent for the animation. [cite: 40]
[cite_start]-- GetRegionParent() - Gets the Region object that the animation operates on. [cite: 42]

-- FontInstance (Abstract)
[cite_start]-- Provides font related methods. [cite: 44]
[cite_start]-- GetFont() - Return the font file, height, and flags. [cite: 45]
[cite_start]-- GetFontObject() - Return the 'parent' Font object, or nil if none. [cite: 45]
[cite_start]-- GetJustifyH() - Return the horizontal text justification. [cite: 46]
[cite_start]-- GetJustifyV() - Return the vertical text justification. [cite: 46]
[cite_start]-- GetShadowColor() - Returns the color of text shadow (r, g, b, a). [cite: 47]
[cite_start]-- GetShadowOffset() - Returns the text shadow offset (x, y). [cite: 48]
[cite_start]-- GetSpacing() - Returns the text spacing. [cite: 48]
[cite_start]-- GetTextColor() - Returns the default text color. [cite: 49]
[cite_start]-- SetFont("path", height[, "flags"]) - Sets the font to use for text. [cite: 49]
[cite_start]-- SetFontObject(fontObject) - Sets the 'parent' Font object from which this object inherits properties. [cite: 50]
[cite_start]-- SetJustifyH("justifyH") - Sets horizontal text justification ("LEFT", "RIGHT", or "CENTER"). [cite: 51]
[cite_start]-- SetJustifyV("justifyV") - Sets vertical text justification ("TOP", "BOTTOM", or "MIDDLE"). [cite: 51]
[cite_start]-- SetShadowColor(r, g, b[, a]) - Sets the text shadow color. [cite: 51]
[cite_start]-- SetShadowOffset(x, y) - Sets the text shadow offset. [cite: 52]
[cite_start]-- SetSpacing(spacing) - Sets the spacing between lines of text in the object. [cite: 52]
[cite_start]-- SetTextColor(r, g, b[, a]) - Sets the default text color. [cite: 53]

-- Region (Abstract)
[cite_start]-- Defines a potentially visible area. [cite: 54]
[cite_start]-- ClearAllPoints() - Clear all attachment points for this object. [cite: 55]
[cite_start]-- GetBottom() - Get the y location of the bottom edge of this frame. [cite: 57]
[cite_start]-- GetCenter() - Get the coordinates of the center of this frame. [cite: 58]
[cite_start]-- GetHeight() - Get the height of this object. [cite: 59]
[cite_start]-- GetLeft() - Get the x location of the left edge of this frame. [cite: 59]
[cite_start]-- GetNumPoints() - Get the number of anchor points for this frame. [cite: 60]
[cite_start]-- GetPoint(pointNum) - Get details for an anchor point for this frame (point, relativeTo, relativePoint, xofs, yofs). [cite: 60]
[cite_start]-- GetRight() - Get the x location of the right edge of this frame. [cite: 61]
[cite_start]-- GetSize() - Get the width and height of the frame. [cite: 62]
[cite_start]-- GetTop() - Get the y location of the top edge of this frame. [cite: 62]
[cite_start]-- GetWidth() - Get the width of this object. [cite: 63]
[cite_start]-- Hide() - Set this object to hidden. [cite: 63]
[cite_start]-- IsShown() - Determine if this object is shown. [cite: 65]
[cite_start]-- IsVisible() - Get whether the object is visible on screen. [cite: 66]
[cite_start]-- SetAllPoints(frame or "frameName") - Set all anchors to match edges of specified frame. [cite: 67]
[cite_start]-- SetHeight(height) - Set the height of the object. [cite: 68]
[cite_start]-- SetParent(parent or "parentName") - Set the parent for this frame. [cite: 68]
[cite_start]-- SetPoint("point", "relativeFrame" or relativeObject, "relativePoint"[, xOfs, yOfs]) - Set an attachment point of this object. [cite: 69]
[cite_start]-- SetSize(width, height) - Set the region's width and height. [cite: 70]
[cite_start]-- SetWidth(width) - Set the width of the object. [cite: 70]
[cite_start]-- Show() - Set this object to be shown. [cite: 71]
--]]

--[[ --- ==== Region Derivatives ==== ---

-- Frame
[cite_start]-- CreateFontString(["name"[, "layer"[, "inheritsFrom"]]]) - Create and return a FontString as a child of this Frame. [cite: 96]
[cite_start]-- CreateTexture(["name"[, "layer"]][, "inheritsFrom"]) - Create and return a Texture as a child of this Frame. [cite: 97]
[cite_start]-- DisableDrawLayer("layer") - Disable rendering of regions (fontstrings, textures) in the specified draw layer. [cite: 99]
[cite_start]-- EnableDrawLayer("layer") - Enable rendering of regions (fontstrings, textures) in the specified draw layer. [cite: 100]
[cite_start]-- EnableKeyboard(enableFlag) - Set whether this frame will get keyboard input. [cite: 100]
[cite_start]-- EnableMouse(enableFlag) - Set whether this frame will get mouse input. [cite: 101]
[cite_start]-- EnableMouseWheel(enableFlag) - Set whether this frame will get mouse wheel notifications. [cite: 102]
[cite_start]-- GetBackdrop() - Creates and returns a backdrop table suitable for use in SetBackdrop. [cite: 103]
[cite_start]-- GetBackdropBorderColor() - Gets the frame's backdrop border color (r, g, b, a). [cite: 103]
[cite_start]-- GetBackdropColor() - Gets the frame's backdrop color (r, g, b, a). [cite: 103]
[cite_start]-- GetChildren() - Get the list of "children" (frames) of this frame. [cite: 104]
[cite_start]-- GetEffectiveScale() - Get the scale factor of this object relative to the root window. [cite: 107]
[cite_start]-- GetFrameLevel() - Get the level of this frame. [cite: 108]
[cite_start]-- GetFrameStrata() - Get the strata of this frame. [cite: 108]
[cite_start]-- GetID() - Get the ID of this frame. [cite: 109]
[cite_start]-- GetNumChildren() - Get the number of "children" this frame has. [cite: 110]
[cite_start]-- GetNumRegions() - Return the number of "regions" (fontstrings, textures) belonging to this frame. [cite: 111]
[cite_start]-- GetRegions() - Return the "regions" (fontstrings, textures) of the frame. [cite: 112]
[cite_start]-- GetScale() - Get the scale factor of this object relative to its parent. [cite: 113]
[cite_start]-- GetScript("handler") - Get the function for one of this frame's handlers. [cite: 114]
[cite_start]-- HasScript("handler") - Return true if the frame can be given a handler of the specified type. [cite: 114]
[cite_start]-- IsEventRegistered("event") - Returns true if the given event is registered to the frame. [cite: 116]
[cite_start]-- IsMovable() - Determine if the frame can be moved. [cite: 121]
[cite_start]-- IsResizable() - Determine if the frame can be resized. [cite: 121]
[cite_start]-- Lower() - Lower this frame behind other frames. [cite: 123]
[cite_start]-- Raise() - Raise this frame above other frames. [cite: 123]
[cite_start]-- RegisterAllEvents() - Register this frame to receive all events (For debugging only). [cite: 123]
[cite_start]-- RegisterEvent("event") - Indicate that this frame should be notified when an event occurs. [cite: 124]
[cite_start]-- RegisterForDrag("buttonType"[, "buttonType"...]) - Indicate that this frame should be notified of drag events. [cite: 125]
[cite_start]-- SetBackdrop([backdropTable]) - Set the backdrop of the frame. [cite: 125]
[cite_start]-- SetBackdropBorderColor(r, g, b[, a]) - Set the frame's backdrop's border's color. [cite: 126]
[cite_start]-- SetBackdropColor(r, g, b[, a]) - Set the frame's backdrop color. [cite: 127]
[cite_start]-- SetFrameLevel(level) - Set the level of this frame. [cite: 130]
[cite_start]-- SetFrameStrata("strata") - Set the strata of this frame. [cite: 130]
[cite_start]-- SetID(id) - Set the ID of this frame. [cite: 131]
[cite_start]-- SetMovable(isMovable) - Set whether the frame can be moved. [cite: 133]
[cite_start]-- SetResizable(isResizable) - Set whether the frame can be resized. [cite: 134]
[cite_start]-- SetScale(scale) - Set the scale factor of this frame relative to its parent. [cite: 134]
[cite_start]-- SetScript("handler", function) - Set the function to use for a handler on this frame. [cite: 135]
[cite_start]-- StartMoving() - Start moving this frame. [cite: 137]
[cite_start]-- StartSizing("point") - Start sizing this frame using the specified anchor point. [cite: 138]
[cite_start]-- StopMovingOrSizing() - Stop moving and/or sizing this frame. [cite: 138]
[cite_start]-- UnregisterAllEvents() - Indicate that this frame should no longer be notified when any events occur. [cite: 138]
[cite_start]-- UnregisterEvent("event") - Indicate that this frame should no longer be notified when an event occurs. [cite: 139]

-- LayeredRegion (Abstract)
[cite_start]-- An abstract type for objects that represent a potentially visible area defined in a layer. [cite: 140]
[cite_start]-- GetDrawLayer() - Returns the draw layer for the Region. [cite: 141]
[cite_start]-- SetDrawLayer("layer") - Sets the draw layer for the Region. [cite: 141]
[cite_start]-- SetVertexColor(r, g, b[, alpha]) - Sets the vertex color. [cite: 141]
--]]

--[[ --- ==== Frame Derivatives ==== ---

-- Button
[cite_start]-- Click() - Execute the click action of the button. [cite: 142]
[cite_start]-- Disable() - Disable the Button so that it cannot be clicked. [cite: 143]
[cite_start]-- Enable() - Enable the Button so that it may be clicked. [cite: 144]
[cite_start]-- GetButtonState() - Return the current state ("PUSHED", "NORMAL") of the Button. [cite: 145]
[cite_start]-- GetFontString() - Get this button's label FontString. [cite: 146]
[cite_start]-- GetHighlightTexture() - Get the texture for this button when highlighted. [cite: 146]
[cite_start]-- GetNormalTexture() - Get the normal texture for this button. [cite: 146]
[cite_start]-- GetPushedTexture() - Get the texture for this button when pushed. [cite: 146]
[cite_start]-- GetText() - Get the text label for the Button. [cite: 146]
[cite_start]-- GetTextWidth() - Get the width of the Button's text. [cite: 148]
[cite_start]-- IsEnabled() - Determine whether the Button is enabled. [cite: 149]
[cite_start]-- LockHighlight() - Set the Button to always be drawn highlighted. [cite: 150]
[cite_start]-- RegisterForClicks("clickType"[, "clickType"...]) - Specify which mouse actions cause an OnClick notification. [cite: 151]
[cite_start]-- SetButtonState("state"[, lock]) - Set the state of the Button ("PUSHED", "NORMAL") and whether it is locked. [cite: 152]
[cite_start]-- SetDisabledTexture(texture or "texturePath") - Set the disabled texture for the Button. [cite: 153]
[cite_start]-- SetFont("font", size[, "flags"]) - Set the font to use for display. [cite: 154]
[cite_start]-- SetFontString(fontString) - Set the button's label FontString. [cite: 154]
[cite_start]-- SetHighlightTexture(texture or "texturePath"[, alphaMode]) - Set the highlight texture for the Button. [cite: 156]
[cite_start]-- SetNormalTexture(texture or "texturePath") - Set the normal texture for the Button. [cite: 156]
[cite_start]-- SetPushedTexture(texture or "texturePath") - Set the pushed texture for the Button. [cite: 156]
[cite_start]-- SetText("text") - Set the text label for the Button. [cite: 157]
[cite_start]-- UnlockHighlight() - Set the Button to not always be drawn highlighted. [cite: 159]

-- EditBox (Also has FontInstance methods)
[cite_start]-- AddHistoryLine("text") - Add text to the edit history. [cite: 164]
[cite_start]-- GetCursorPosition() - Gets the position of the cursor inside the EditBox. [cite: 165]
[cite_start]-- GetNumLetters() - Gets the number of letters in the box. [cite: 167]
[cite_start]-- GetText() - Get the current text contained in the edit box. [cite: 168]
[cite_start]-- HighlightText([startPos, endPos]) - Set the highlight to all or some of the edit box text. [cite: 169]
[cite_start]-- Insert("text") - Insert text into the edit box. [cite: 169]
[cite_start]-- SetCursorPosition(position) - Set the position of the cursor within the EditBox. [cite: 171]
[cite_start]-- SetFocus() - Move input focus (the cursor) to this editbox. [cite: 172]
[cite_start]-- SetMaxBytes(maxBytes) - Set the maximum byte size for entered text. [cite: 173]
[cite_start]-- SetMaxLetters(maxLetters) - Set the maximum number of letters for entered text. [cite: 174]
[cite_start]-- SetText("text") - Set the text contained in the edit box. [cite: 175]

-- GameTooltip
[cite_start]-- AddDoubleLine(textL, textR, rL, gL, bL, rR, gR, bR) - Adds a line with text on left and right. [cite: 177]
[cite_start]-- AddLine("text" [, red, green, blue [, wrapText]]) - Appends a new line to the tooltip. [cite: 178]
[cite_start]-- ClearLines() - Clear all lines of tooltip. [cite: 180]
[cite_start]-- GetItem() - Returns name, link of the item in the tooltip. [cite: 181]
[cite_start]-- GetSpell() - Returns name, rank of the spell in the tooltip. [cite: 181]
[cite_start]-- GetUnit() - Returns unit name, unit id from the tooltip. [cite: 182]
[cite_start]-- NumLines() - Get the number of lines in the tooltip. [cite: 183]
[cite_start]-- SetAction(slot) - Shows the tooltip for the specified action button. [cite: 184]
[cite_start]-- SetBagItem(bag, slot) - Shows the tooltip for a bag item. [cite: 185]
[cite_start]-- SetHyperlink("itemString" or "itemLink") - Shows the tooltip for an item link. [cite: 187]
[cite_start]-- SetInventoryItem(unit, slot[, nameOnly]) - Shows the tooltip for an inventory item. [cite: 189]
[cite_start]-- SetLootItem(slot) - Shows the tooltip for a loot item. [cite: 189]
[cite_start]-- SetOwner(owner, "anchor"[, +x, +y]) - Sets the owner and anchor point for the tooltip. [cite: 190]
[cite_start]-- SetPetAction(slot) - Shows the tooltip for the specified pet action. [cite: 191]
[cite_start]-- SetSpell(spellId, bookType) - Shows the tooltip for the specified spell. [cite: 194]
[cite_start]-- SetTalent(tabIndex, talentIndex) - Shows the tooltip for the specified talent. [cite: 195]
[cite_start]-- SetText("text"[, red, green, blue[, alpha[, textWrap]]]) - Set the text of the tooltip. [cite: 196]
[cite_start]-- SetUnit("unitId") - Shows the tooltip for a unit. [cite: 197]
[cite_start]-- SetUnitBuff("unitId", buffIndex[, raidFilter]) - Shows the tooltip for a unit's buff. [cite: 198]
[cite_start]-- SetUnitDebuff("unitId", buffIndex[, raidFilter]) - Shows the tooltip for a unit's debuff. [cite: 199]

-- MessageFrame (Also has FontInstance methods)
[cite_start]-- AddMessage("text", r, g, b, messageGroup, holdTime) - Add a message to the frame which will fade eventually. [cite: 200]
[cite_start]-- Clear() - Clear the messages from the frame. [cite: 200]

-- Minimap
[cite_start]-- GetZoom() - Get the current zoom level. [cite: 201]
[cite_start]-- GetZoomLevels() - Get the maximum zoom level. [cite: 202]
[cite_start]-- PingLocation(x, y) - Perform a ping at the specified location. [cite: 203]
[cite_start]-- SetZoom(level) - Set the current zoom level. [cite: 204]

-- Model
[cite_start]-- Displays 3D-mesh geometry. [cite: 205]
[cite_start]-- ClearModel() - Removes all geometry from the Model. [cite: 207]
[cite_start]-- GetModel() - Gets the model file for this Model. [cite: 208]
[cite_start]-- GetModelScale() - Returns the current mesh scaling factor. [cite: 209]
[cite_start]-- GetPosition() - Returns the current position of the mesh as x, y, z. [cite: 209]
[cite_start]-- SetCamera(index) - Select a pre-defined camera. [cite: 210]
[cite_start]-- SetFacing(facing) - Set the direction that the model is facing. [cite: 211]
[cite_start]-- SetModel("file") - Set the mesh that is displayed in the frame. [cite: 213]
[cite_start]-- SetModelScale(scale) - Sets the scale factor for the mesh. [cite: 214]
[cite_start]-- SetPosition(x, y, z) - Set the position of the mesh inside the frame's coordinate system. [cite: 215]

-- ScrollFrame
[cite_start]-- GetHorizontalScroll() - Gets the horizontal scroll offset. [cite: 216]
[cite_start]-- GetHorizontalScrollRange() - Gets the total horizontal scrollable range. [cite: 216]
[cite_start]-- GetVerticalScroll() - Gets the vertical scroll offset. [cite: 216]
[cite_start]-- GetVerticalScrollRange() - Gets the total vertical scrollable range. [cite: 216]
[cite_start]-- SetHorizontalScroll(offset) - Sets the horizontal scroll offset. [cite: 216]
[cite_start]-- SetVerticalScroll(offset) - Sets the vertical scroll offset. [cite: 216]
[cite_start]-- UpdateScrollChildRect() - Updates the scroll child's dimensions. [cite: 216]

-- Slider
[cite_start]-- GetMinMaxValues() - Get the current bounds of the slider. [cite: 225]
[cite_start]-- GetValue() - Get the current value of the slider. [cite: 227]
[cite_start]-- IsEnabled() - Returns enabled status of the slider. [cite: 228]
[cite_start]-- SetMinMaxValues(min, max) - Set the bounds of the slider. [cite: 228]
[cite_start]-- SetValue(value) - Set the value of the slider. [cite: 231]
[cite_start]-- SetValueStep(value) - Set the step size of the slider. [cite: 231]

-- StatusBar
[cite_start]-- GetMinMaxValues() - Get the current bounds of the bar. [cite: 232]
[cite_start]-- GetValue() - Get the current value of the bar. [cite: 233]
[cite_start]-- SetMinMaxValues(min, max) - Set the bounds of the bar. [cite: 233]
[cite_start]-- SetStatusBarColor(r, g, b[, alpha]) - Set the color of the bar. [cite: 234]
[cite_start]-- SetStatusBarTexture("file" or texture[, "layer"]) - Sets the texture of the bar. [cite: 235]
[cite_start]-- SetValue(value) - Set the value of the bar. [cite: 236]
--]]

--[[ --- ==== Button Derivatives ==== ---

-- CheckButton
[cite_start]-- GetChecked() - Get the status of the checkbox. [cite: 237]
[cite_start]-- SetChecked([state]) - Set the status of the checkbox. [cite: 238]
[cite_start]-- SetCheckedTexture(texture) - Set the texture to use for a checked box. [cite: 239]
[cite_start]-- SetDisabledCheckedTexture(texture) - Set the texture to use for a disabled but checked box. [cite: 240]
--]]

--[[ --- ==== LayeredRegion Derivatives ==== ---

-- Texture
[cite_start]-- GetBlendMode() - Return the blend mode set by SetBlendMode(). [cite: 244]
[cite_start]-- GetTexture() - Gets this texture's current texture path. [cite: 245]
[cite_start]-- SetBlendMode("mode") - Set the alphaMode of the texture. [cite: 247]
[cite_start]-- SetDesaturated(flag) - If it should be displayed with no saturation. [cite: 247]
[cite_start]-- SetGradient("orientation", minR, minG, minB, maxR, maxG, maxB) - Sets a color gradient. [cite: 247]
[cite_start]-- SetTexCoord(minX, maxX, minY, maxY or ULx, ULy, LLx, LLy, URx, URy, LRx, LRy) - Set the corner coordinates for texture display. [cite: 248]
[cite_start]-- SetTexture("texturePath" or r, g, b[, a]) - Sets the texture from a file or to a solid color. [cite: 250]

-- FontString (Also has FontInstance methods)
[cite_start]-- GetStringHeight() - Returns the height in pixels of the current string. [cite: 251]
[cite_start]-- GetStringWidth() - Returns the width in pixels of the current string. [cite: 252]
[cite_start]-- GetText() - Get the displayed text. [cite: 252]
[cite_start]-- SetNonSpaceWrap(wrapFlag) - Set whether long strings without spaces are wrapped or truncated. [cite: 254]
[cite_start]-- SetText("text") - Set the displayed text. [cite: 255]
[cite_start]-- SetTextHeight(pixelHeight) - Set the height of the text by scaling graphics. [cite: 255]
--]]